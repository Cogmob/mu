'use strict';

var header = require('gulp-header');
var footer = require('gulp-footer');
var gulp = require('gulp');
var replace = require('gulp-replace');
var sequence = require('gulp-sequence');
var babel = require('gulp-babel');
var del = require('del');
var debug = require('gulp-debug');
var continuation = require('gulp-continuation');

gulp.task('delete_src', function () {
    return del(['src']);
});

gulp.task('copy_src', function () {
    return gulp.src('../../src/**/*').pipe(gulp.dest('src'));
});

gulp.task('main_file', function () {
    return gulp.src('src/lambda_pattern/lambda_pattern.js').pipe(header('#!/usr/bin/env node\n\n')).pipe(footer('\nif (!module.parent) {\n    lambda_pattern(function (er) {\n        if (er) {\n           console.log(er.toString());\n        }\n    });\n}')).pipe(gulp.dest('src/lambda_pattern'));
});

gulp.task('es6', function () {
    return gulp.src('src/**/*.es6').pipe(replace(/\[project\_name\]/g, 'lambda_pattern')).pipe(replace(/cont\(.*err.*\).*;/g, '$& if (err) {return cb(err);};')).pipe(gulp.dest('src')).pipe(babel({ presets: ['es2015'] })).pipe(continuation()).pipe(gulp.dest('src'));
});

gulp.task('copy_gulpfile_1', function () {
    return gulp.src('src/npm/gulpfile.js').pipe(gulp.dest('../../src/npm'));
});

gulp.task('copy_gulpfile_2', function () {
    return gulp.src('src/npm/gulpfile.js').pipe(gulp.dest('.'));
});

gulp.task('copy_tools', function () {
    return gulp.src('src/tools/tools.js').pipe(gulp.dest('../stored/tools_scripts/current.es6'));
});

gulp.task('make_updatables', function () {
    return gulp.src('src/create/updatables/*').pipe(gulp.dest('updatables'));
});

gulp.task('build_dev', sequence('copy_src', 'es6', 'main_file', 'copy_gulpfile_1', 'copy_gulpfile_2'));
gulp.task('build_release', sequence('copy_src', 'es6', 'main_file', 'make_updatables'));
/* Generated by Continuation.js v0.1.7 */