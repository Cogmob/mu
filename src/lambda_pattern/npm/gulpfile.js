'use strict';

var webpack = require('webpack-stream');
var header = require('gulp-header');
var footer = require('gulp-footer');
var gulp = require('gulp');
var replace = require('gulp-replace');
var sequence = require('gulp-sequence');
var babel = require('gulp-babel');
var del = require('del');
var debug = require('gulp-debug');
var continuation = require('gulp-continuation');

gulp.task('copy_src', function () {
    return gulp.src('../../src/**/*').pipe(gulp.dest('src'));
});

gulp.task('main_file', function () {
    return gulp.src('src/lambda_pattern/lambda_pattern.js').pipe(header('#!/usr/bin/env node\n\n')).pipe(footer('\nif (!module.parent) {\n    lambda_pattern(function (er) {\n        if (er) {\n           console.log(er.toString());\n        }\n    });\n}')).pipe(gulp.dest('src/lambda_pattern'));
});

gulp.task('es6', function () {
    return gulp.src('src/**/*.es6').pipe(replace(/\[project\_name\]/g, 'lambda_pattern')).pipe(replace(/cont\(.*err.*\).*;/g, '$& if (err) {return cb(err);};')).pipe(gulp.dest('src')).pipe(babel({ presets: ['es2015'] })).pipe(continuation()).pipe(gulp.dest('src'));
});

gulp.task('backup_gulpfile', function () {
    return gulp.src('src/lambda_pattern/npm/gulpfile.js').pipe(gulp.dest('../../src/lambda_pattern/npm'));
});

gulp.task('build_tools', function () {
    return gulp.src('src/tools/tools.js').pipe(webpack({ target: 'node', output: { filename: 'built_tools.js' } })).pipe(gulp.dest('src/tools'));
});

gulp.task('build_dev', sequence('copy_src', 'es6', 'main_file', 'backup_gulpfile', 'build_tools'));
gulp.task('build_release', sequence('copy_src', 'es6', 'main_file'));
/* Generated by Continuation.js v0.1.7 */