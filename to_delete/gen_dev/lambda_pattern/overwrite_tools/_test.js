var jspm, q, promises;
'use strict';
jspm = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/jspm/api.js');
q = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/q/q.js');
jspm.setPackagePath(process.env['HOME'] + '/.jspm_global_packages');
promises = [
  jspm.import('serialfs'),
  require('./../create/_'),
  require('./../set_up/_'),
  require('./../build/_'),
  require('./_'),
  jspm.import('async-stacktrace'),
  jspm.import('wordwrap')
];
module.exports = q.all(promises).spread(function (module_serialfs, local_include_create_, local_include_set_up_, local_include_build_, local_include__, ERR, wordwrap) {
  var _;
  _ = function _() {
    var cb, err, metadata, generated, expected;
    cb = function cb(err, generated, expected) {
      if (err) {
        console.log(wordwrap(20, 81)(err.stack.replace(/\\/g, '\\ ').replace(/^/gm, '.')).split('\n').forEach(function (stack_line) {
          console.log(stack_line.replace(/\\ /g, '\\').replace(/ at/g, '\nat').replace(/Error:/g, '\nError:'));
        }));
      }
      t.deepEqual(expected, generated);
      t.end();
    };
    local_include_create_(__dirname + '/../..', __dirname, 'test_project', 2000, function (arguments, _$param0) {
      err = _$param0;
      if (ERR(err, cb)) {
        return;
      }
      metadata = { project_name: 'test_project' };
      local_include_set_up_(__dirname + '/../..', __dirname + '/test_project', metadata, function (arguments, _$param1) {
        err = _$param1;
        if (ERR(err, cb)) {
          return;
        }
        local_include_build_(__dirname + '/test_project', function (arguments, _$param2) {
          err = _$param2;
          if (ERR(err, cb)) {
            return;
          }
          local_include__(__dirname + '/test_project', function (arguments, _$param3) {
            err = _$param3;
            if (ERR(err, cb)) {
              return;
            }
            local_include_build_(__dirname + '/test_project', function (arguments, _$param4) {
              err = _$param4;
              if (ERR(err, cb)) {
                return;
              }
              local_include__(__dirname + '/test_project', function (arguments, _$param5) {
                err = _$param5;
                if (ERR(err, cb)) {
                  return;
                }
                local_include_build_(__dirname + '/test_project', function (arguments, _$param6) {
                  err = _$param6;
                  if (ERR(err, cb)) {
                    return;
                  }
                  local_include__(__dirname + '/test_project', function (arguments, _$param7) {
                    err = _$param7;
                    if (ERR(err, cb)) {
                      return;
                    }
                    module_serialfs.obj(__dirname + '/test_project', false, true, function (arguments, _$param8, _$param9) {
                      err = _$param8;
                      generated = _$param9;
                      if (ERR(err, cb)) {
                        return;
                      }
                      module_serialfs.obj(__dirname + '/expected_data', false, true, function (arguments, _$param10, _$param11) {
                        err = _$param10;
                        expected = _$param11;
                        if (ERR(err, cb)) {
                          return;
                        }
                        cb(null, generated, expected);
                      }.bind(this, arguments));
                    }.bind(this, arguments));
                  }.bind(this, arguments));
                }.bind(this, arguments));
              }.bind(this, arguments));
            }.bind(this, arguments));
          }.bind(this, arguments));
        }.bind(this, arguments));
      }.bind(this, arguments));
    }.bind(this, arguments));
  };
  return _;
}).catch(function (err) {
  console.log(err);
});
/* Generated by Continuation.js v0.1.7 */