'use strict';

// file: conveyor_to_display/1_pre_ast

var jspm = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/jspm/api.js');
var q = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/q/q.js');
jspm.setPackagePath(process.env['HOME'] + '/.jspm_global_packages');
var promises = [
// load jspm
jspm.import('glob-promise'), jspm.import('read-files-promise'), jspm.import('bluebird'),
// load local
require('./../shared/reject'), require('./../shared/zip'),
// other
jspm.import('async-stacktrace'), jspm.import('wordwrap')];
module.exports = q.all(promises).spread(function (module_globpromise, module_readfilespromise, module_bluebird, local_include_sharedreject, local_include_sharedzip, ERR, wordwrap) {
    var _ = function _(path) {
        path = path.replace(/\\/g, '/');
        var paths;
        return module_globpromise(path + '/**/*.es6').then(function (filenames) {
            paths = filenames.map(function (filename) {
                return filename.replace(path + '/', '');
            });
            return module_readfilespromise(filenames, 'utf8');
        }, local_include_sharedreject).then(function (files) {
            files = local_include_sharedzip('path', paths, 'contents', files);
            return module_bluebird.resolve(files);
        }, local_include_sharedreject);
    };

    return _;
}).catch(function (err) {
    console.log(err);
});
/* Generated by Continuation.js v0.1.7 */