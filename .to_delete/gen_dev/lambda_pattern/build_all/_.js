var jspm, q, promises;
'use strict';
jspm = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/jspm/api.js');
q = eval('require')(process.env['HOME'] + '/.jspm_global_packages/node_modules/q/q.js');
jspm.setPackagePath(process.env['HOME'] + '/.jspm_global_packages');
promises = [
  jspm.import('remove_path'),
  jspm.import('fs-extra@^1.0.0'),
  require('./../shared/move_if_exists'),
  require('./../shared/copy_if_exists'),
  require('./modify_es6'),
  require('./modify_main_file'),
  require('./convert_es6'),
  jspm.import('async-stacktrace'),
  jspm.import('wordwrap')
];
module.exports = q.all(promises).spread(function (module_remove_path, module_fsextra100, local_include_sharedmove_if_exists, local_include_sharedcopy_if_exists, local_include_modify_es6, local_include_modify_main_file, local_include_convert_es6, ERR, wordwrap) {
  var import_make_dirmkdirp, import_copy_pathcopy, _;
  import_make_dirmkdirp = module_fsextra100.mkdirp;
  import_copy_pathcopy = module_fsextra100.copy;
  _ = function _(root_path, cb) {
    var move_if_exists, copy_if_exists, gen_path, proj_path, err;
    move_if_exists = local_include_sharedmove_if_exists;
    copy_if_exists = local_include_sharedcopy_if_exists;
    gen_path = root_path + '/generated_local';
    proj_path = gen_path + '/project';
    move_if_exists(proj_path + '/node_modules', gen_path + '/project_node_modules', function (arguments, _$param0) {
      err = _$param0;
      if (ERR(err, cb)) {
        return;
      }
      module_remove_path(proj_path, function (arguments, _$param1) {
        err = _$param1;
        if (ERR(err, cb)) {
          return;
        }
        import_make_dirmkdirp(proj_path, function (arguments, _$param2) {
          err = _$param2;
          if (ERR(err, cb)) {
            return;
          }
          import_copy_pathcopy(root_path + '/_.es6', proj_path + '/_.es6', function (arguments, _$param3) {
            err = _$param3;
            if (ERR(err, cb)) {
              return;
            }
            import_copy_pathcopy(root_path + '/__test.es6', proj_path + '/__test.es6', function (arguments, _$param4) {
              err = _$param4;
              if (ERR(err, cb)) {
                return;
              }
              copy_if_exists(root_path + '/submodules', proj_path + '/submodules', function (arguments, _$param5) {
                err = _$param5;
                if (ERR(err, cb)) {
                  return;
                }
                move_if_exists(root_path + '/project_node_modules', proj_path + '/node_modules', function (arguments, _$param6) {
                  err = _$param6;
                  if (ERR(err, cb)) {
                    return;
                  }
                  local_include_modify_es6(proj_path, function (arguments, _$param7) {
                    err = _$param7;
                    if (ERR(err, cb)) {
                      return;
                    }
                    local_include_modify_main_file(proj_path, function (arguments, _$param8) {
                      err = _$param8;
                      if (ERR(err, cb)) {
                        return;
                      }
                      local_include_convert_es6(proj_path, function (arguments, _$param9) {
                        err = _$param9;
                        if (ERR(err, cb)) {
                          return;
                        }
                        cb(null);
                      }.bind(this, arguments));
                    }.bind(this, arguments));
                  }.bind(this, arguments));
                }.bind(this, arguments));
              }.bind(this, arguments));
            }.bind(this, arguments));
          }.bind(this, arguments));
        }.bind(this, arguments));
      }.bind(this, arguments));
    }.bind(this, arguments));
  };
  return _;
}).catch(function (err) {
  console.log(err);
});
/* Generated by Continuation.js v0.1.7 */