#!/usr/bin/env node

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var commander = __webpack_require__(3);

	var create_commander = __webpack_require__(4);

	create_commander(commander, __dirname);
	commander.parse(process.argv);
	//a
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = async-stacktrace;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = word-wrap;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = commander;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var ___, __sharedget_metadata, __set_up_, __build_tools_, ERR, word_wrap, _;
	'use strict';
	___ = __webpack_require__(5);
	__sharedget_metadata = __webpack_require__(6);
	__set_up_ = __webpack_require__(7);
	__build_tools_ = __webpack_require__(14);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(commander, mu_src_path) {
	  var success_message, cb;
	  success_message = 'created a lambda pattern project in your current directory';
	  cb = function cb(e) {
	    if (e) {
	      return console.log(e);
	    }
	    console.log(success_message);
	  };
	  commander.command('create project_name').description('make a new lambda patern project').action(function (project_name) {
	    var err, gen_path, info;
	    console.log('+ 1');
	    ___(mu_src_path, process.cwd(), project_name, 2000, function (arguments, _$param0) {
	      err = _$param0;
	      if (ERR(err, cb)) {
	        return;
	      }
	      console.log('+ 2');
	      gen_path = __dirname + '/' + project_name;
	      console.log('+ 3');
	      __sharedget_metadata(gen_path, function (arguments, _$param1, _$param2) {
	        err = _$param1;
	        info = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        console.log('+ 4');
	        __set_up_(mu_src_path, gen_path, info, function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          console.log('+ 5');
	          __build_tools_(gen_path, function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            console.log('+ 6');
	            overwrite_tools(gen_path, function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('+ 7');
	              cb();
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  });
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(mu_src_path, root_path, project_name, year, cb) {
	  var skel_path, gen_path, err, readme, index, test_file, meta;
	  skel_path = mu_src_path + '/skeleton_data';
	  gen_path = root_path + '/' + project_name;
	  copy_file(skel_path, gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    read_file(gen_path + '/readme.md', 'utf8', function (arguments, _$param1, _$param2) {
	      err = _$param1;
	      readme = _$param2;
	      if (ERR(err, cb)) {
	        return;
	      }
	      readme = readme.replace(/\[\[project_name\]\]/g, project_name);
	      write_file(gen_path + '/readme.md', readme, function (arguments, _$param3) {
	        err = _$param3;
	        if (ERR(err, cb)) {
	          return;
	        }
	        read_file(gen_path + '/_.es6', 'utf8', function (arguments, _$param4, _$param5) {
	          err = _$param4;
	          index = _$param5;
	          if (ERR(err, cb)) {
	            return;
	          }
	          index = index.replace(/\[\[project_name\]\]/g, project_name);
	          write_file(gen_path + '/_.es6', index, function (arguments, _$param6) {
	            err = _$param6;
	            if (ERR(err, cb)) {
	              return;
	            }
	            read_file(gen_path + '/__test.es6', 'utf8', function (arguments, _$param7, _$param8) {
	              err = _$param7;
	              test_file = _$param8;
	              if (ERR(err, cb)) {
	                return;
	              }
	              test_file = test_file.replace(/\[\[project_name\]\]/g, project_name);
	              write_file(gen_path + '/__test.es6', test_file, function (arguments, _$param9) {
	                err = _$param9;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                read_file(gen_path + '/meta/data.yaml', 'utf8', function (arguments, _$param10, _$param11) {
	                  err = _$param10;
	                  meta = _$param11;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  meta = meta.replace(/\[\[project_name\]\]/g, project_name);
	                  write_file(gen_path + '/meta/data.yaml', meta, function (arguments, _$param12) {
	                    err = _$param12;
	                    if (ERR(err, cb)) {
	                      return;
	                    }
	                    cb(null);
	                  }.bind(this, arguments));
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(root_path, cb) {
	  var err, metadata;
	  read_file(root_path + '/meta/data.yaml', 'utf8', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    metadata = _$param1;
	    if (ERR(err, cb)) {
	      return;
	    }
	    cb(null, js - yaml.safeLoad(metadata), root_path);
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var __set_updatables_version_, __project, __tools, ERR, word_wrap, _;
	'use strict';
	__set_updatables_version_ = __webpack_require__(8);
	__project = __webpack_require__(10);
	__tools = __webpack_require__(13);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(mu_src_path, root_path, metadata, cb) {
	  var err;
	  make_dir(root_path + '/generated_local', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    __set_updatables_version_(mu_src_path, root_path, 'HEAD', function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      __project(mu_src_path, root_path, metadata, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        __tools(mu_src_path, root_path, metadata, cb);
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __sharedfind_project_root, ERR, word_wrap, move, find_project_root, _;
	'use strict';
	__sharedfind_project_root = __webpack_require__(9);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	move = fs.move;
	find_project_root = __sharedfind_project_root;
	_ = function _(mu_src_path, root_path, version, cb) {
	  var move_updatables, cleanup;
	  (function () {
	    var err, tool_root;
	    make_dir(root_path + '/generated_local', function (arguments, _$param0) {
	      err = _$param0;
	      if (ERR(err, cb)) {
	        return;
	      }
	      find_project_root(mu_src_path + '/mu_sub_repo', function (arguments, _$param1, _$param2) {
	        err = _$param1;
	        tool_root = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        git - archive({
	          repoPath: tool_root + '/.git',
	          commit: version,
	          outputPath: root_path + '/generated_local/updatables.tar'
	        }, function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          move_updatables();
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }());
	  move_updatables = function move_updatables() {
	    var err;
	    make_dir(root_path + '/generated_local/updatables', function (arguments, _$param4) {
	      err = _$param4;
	      if (ERR(err, cb)) {
	        return;
	      }
	      fs.create_read_stream(root_path + '/generated_local/updatables.tar').pipe(tar - fs.extract(root_path + '/generated_local/updatables')).on('finish', cleanup).on('error', function (er) {
	        return ERR(er, cb);
	      });
	    }.bind(this, arguments));
	  };
	  cleanup = function cleanup() {
	    var err;
	    remove_path(root_path + '/generated_local/lambda_updatables', function (arguments, _$param5) {
	      err = _$param5;
	      if (ERR(err, cb)) {
	        return;
	      }
	      move(root_path + '/generated_local/updatables/gen/release/updatables', root_path + '/generated_local/lambda_updatables', function (arguments, _$param6) {
	        err = _$param6;
	        if (ERR(err, cb)) {
	          return;
	        }
	        remove_path(root_path + '/generated_local/updatables.tar', function (arguments, _$param7) {
	          err = _$param7;
	          if (ERR(err, cb)) {
	            return;
	          }
	          remove_path(root_path + '/generated_local/updatables', function (arguments, _$param8) {
	            err = _$param8;
	            if (ERR(err, cb)) {
	              return;
	            }
	            cb();
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  };
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(curr_path, cb) {
	  var err, exists;
	  file_exists(curr_path + '/.git', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    exists = _$param1;
	    if (exists) {
	      return cb(null, curr_path);
	    }
	    _(curr_path + '/..', cb);
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var __sharedcopy_if_exists, __set_updatables_version_, __sharedmake_package_json, ERR, word_wrap, copy_if_exists, _;
	'use strict';
	__sharedcopy_if_exists = __webpack_require__(11);
	__set_updatables_version_ = __webpack_require__(8);
	__sharedmake_package_json = __webpack_require__(12);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	copy_if_exists = __sharedcopy_if_exists;
	_ = function _(mu_src_path, root_path, metadata, cb) {
	  var gen_path, err, deps, dev_deps;
	  gen_path = root_path + '/generated_local/project';
	  remove_path(gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    make_dir(gen_path, function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root_path + '/submodules', gen_path, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        copy_path(root_path + '/_.es6', gen_path + '/_.es6', function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          copy_path(root_path + '/__test.es6', gen_path + '/__test.es6', function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            __set_updatables_version_(mu_src_path, root_path, 'HEAD', function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              read_file(root_path + '/meta/npm_dependencies.yaml', function (arguments, _$param6, _$param7) {
	                err = _$param6;
	                deps = _$param7;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                read_file(root_path + '/meta/npm_dev_dependencies.yaml', function (arguments, _$param8, _$param9) {
	                  err = _$param8;
	                  dev_deps = _$param9;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  cb();
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// load jspm
	// const fs = jspm.require('undefined').fs-extra@^1.0.0;
	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var _ = function _(from, to, cb) {
	    var handle_response = function handle_response() {
	        cb();
	    };

	    fs.copy(from, to, handle_response);
	};
	//a
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	_ = function _(mu_src_path, metadata, gen_path, deps, dev_deps, cb) {
	  var map_to_str, err, def_vals_yaml, def_vals, template, replace, s;
	  map_to_str = function map_to_str(i) {
	    var ret;
	    ret = ramda.map(function (pair) {
	      return '"' + pair[0] + '": "' + pair[1] + '"';
	    }, ramda.toPairs(i));
	    return ret.join(',\n    ');
	  };
	  read_file(mu_src_path + '/lambda_pattern/shared/default_package_values.yaml', 'utf8', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    def_vals_yaml = _$param1;
	    if (ERR(err, cb)) {
	      return;
	    }
	    def_vals = js - yaml.safeLoad(def_vals_yaml);
	    read_file(mu_src_path + '/lambda_pattern/shared/package_template.json', 'utf8', function (arguments, _$param2, _$param3) {
	      err = _$param2;
	      template = _$param3;
	      if (ERR(err, cb)) {
	        return;
	      }
	      replace = object - merge - override([
	        metadata,
	        def_vals
	      ]);
	      replace.dependencies = map_to_str(deps);
	      replace.dev_dependencies = map_to_str(dev_deps);
	      s = string - template(template, replace);
	      write_file(gen_path + '/package.json', s, cb);
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var __sharedcopy_if_exists, __sharedmake_package_json, ERR, word_wrap, copy_if_exists, make_package_json, _;
	'use strict';
	__sharedcopy_if_exists = __webpack_require__(11);
	__sharedmake_package_json = __webpack_require__(12);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	copy_if_exists = __sharedcopy_if_exists;
	make_package_json = __sharedmake_package_json;
	_ = function _(mu_src_path, root, metadata, cb) {
	  var gen_path, err, dev_deps, deps, packages;
	  gen_path = root + '/generated_local/tools';
	  remove_path(gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    make_dir(gen_path, function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root + '/tools', gen_path, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        read_file(root + '/tools/npm_dev_dependencies.yaml', 'utf8', function (arguments, _$param3, _$param4) {
	          err = _$param3;
	          dev_deps = _$param4;
	          if (ERR(err, cb)) {
	            return;
	          }
	          make_dir(root + '/generated/tools', function (arguments, _$param5) {
	            err = _$param5;
	            if (ERR(err, cb)) {
	              return;
	            }
	            make_package_json(mu_src_path, metadata, root + '/generated/tools', [], js - yaml.safeLoad(dev_deps), function (arguments, _$param6) {
	              err = _$param6;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('dev deps');
	              console.log(dev_deps);
	              deps = js - yaml.safeLoad(dev_deps);
	              packages = Object.keys(deps).join(' ');
	              console.log(packages);
	              console.log('====== install 2 started');
	              child_process.exec('pnpm i ' + packages, { cwd: root + '/generated/tools' }, function (arguments, _$param7) {
	                err = _$param7;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                console.log('====== install 2 finished');
	                console.log('====== install 3 started');
	                copy_path(root + '/generated/tools/node_modules', gen_path + '/node_modules', function (arguments, _$param8) {
	                  err = _$param8;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  console.log('====== install 3 finished');
	                  cb();
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var __sharedcopy_if_exists, __sharedmove_if_exists, __sharedconvert_es6, __modify_es6, __webpack, ERR, word_wrap, copy_if_exists, move_if_exists, convert_es6, _;
	'use strict';
	__sharedcopy_if_exists = __webpack_require__(11);
	__sharedmove_if_exists = __webpack_require__(15);
	__sharedconvert_es6 = __webpack_require__(16);
	__modify_es6 = __webpack_require__(17);
	__webpack = __webpack_require__(18);
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	copy_if_exists = __sharedcopy_if_exists;
	move_if_exists = __sharedmove_if_exists;
	convert_es6 = __sharedconvert_es6;
	_ = function _(root, cb) {
	  var err;
	  move_if_exists(root + '/generated_local/tools/node_modules', root + '/generated_local/tools_node_modules', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    remove_file(root + '/generated_local/tools', function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root + '/tools', root + '/generated_local/tools', function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        move_if_exists(root + '/generated_local/tools_node_modules', root + '/generated_local/tools/node_modules', function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          __modify_es6(root + '/generated_local/tools', function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            convert_es6(root + '/generated_local/tools', function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('webpack for tools start');
	              __webpack(root + '/generated_local/tools', function (arguments, _$param6) {
	                err = _$param6;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                console.log('webpack for tools finished');
	                cb(null);
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// load jspm
	// const move_path = jspm.require('undefined').undefined;
	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var _ = function _(from, to, cb) {
	    var handle_response = function handle_response() {
	        cb();
	    };

	    move_path(from, to, handle_response);
	};
	//a
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// load jspm
	// const gulp = jspm.require('undefined').gulp@^3.9.1;
	// const gulp-babel = jspm.require('undefined').undefined;
	// const continuation = jspm.require('undefined').continuation@^0.1.7;
	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var _ = function _(root_path, cb) {
	    gulp.task('_', function () {
	        return gulp.src([root_path + '/**/*.es6', '!**/expected/**', '!**/node_modules/**', '!**/*_data/**/*']).pipe(gulp - babel({ presets: ['es2015'] })).pipe(continuation()).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('_');
	};
	//a
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// load jspm
	// const gulp = jspm.require('undefined').gulp@^3.9.1;
	// const gulp-insert = jspm.require('undefined').undefined;
	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var _ = function _(root_path, cb) {
	    gulp.task('a', function () {
	        return gulp.src([root_path + '/**' + '/*.es6', '!*' + '*/expected/**', '!**' + '/node_modules/**', '!**' + '/*_data/**' + '/*']).pipe(gulp - insert.prepend('const word_wrap = require(\'word-wrap\');\n')).pipe(gulp - insert.prepend('const ERR = require(\'async-stacktrace\');\n')).pipe(gulp - replace(/\[project\_name\]/g, 'lambda_pattern')).pipe(gulp - replace(/cont\(.*err.*\).*;/g, '$&\n                if (ERR(err, cb)) {\n                    return;}\n                    ')).pipe(gulp - replace(/const cb = \(err.*\) \=> \{/g, '$&\n            if (err) {\n                console.log(word_wrap(err.stack.replace(/\\\\/g, \'\\\\ \'), {\n                    trim: true,\n                    width: 80})\n                .split(\'\\n\').forEach((stack_line) => {\n                    console.log(stack_line\n                        .replace(/\\\\ /g, \'\\\\\')\n                        .replace(/ at/g, \'\\nat\')\n                        .replace(/Error:/g, \'\\nError:\'));}));\n                t.fail();\n                return t.end();}\n            ')).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('a');
	};
	//a
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// load jspm
	// const gulp = jspm.require('undefined').gulp@^3.9.1;
	// const webpack-stream = jspm.require('undefined').undefined;
	// imports for all files
	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var _ = function _(root_path, cb) {
	    gulp.task('_', function () {
	        process.chdir(root_path);
	        return gulp.src(root_path + '/_.js').pipe(webpack - stream({
	            context: root_path,
	            externals: [webpack - node - externals()],
	            module: {
	                loaders: [{
	                    test: /\.jsx?$/,
	                    exclude: /node_modules/,
	                    loader: 'shebang' }] },
	            node: {
	                __filename: false,
	                __dirname: false },
	            output: { filename: '__built.js' },
	            target: 'node' })).pipe(gulp - insert.prepend('#!/usr/bin/env node\n\n')).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('_');
	};
	//a
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ }
/******/ ]);