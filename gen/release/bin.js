#!/usr/bin/env node

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var commander = __webpack_require__(3);

	var create_commander = __webpack_require__(4);

	create_commander(commander, __dirname);
	commander.parse(process.argv);
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = async-stacktrace;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = word-wrap;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = commander;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, create, set_up, get_metadata, build_tools, overwrite_tools, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	create = __webpack_require__(5);
	set_up = __webpack_require__(7);
	get_metadata = __webpack_require__(22);
	build_tools = __webpack_require__(23);
	overwrite_tools = __webpack_require__(36);
	_ = function _(commander, mu_src_path) {
	  var success_message, cb;
	  success_message = 'created a lambda pattern project in your current directory';
	  cb = function cb(e) {
	    if (e) {
	      return console.log(e);
	    }
	    console.log(success_message);
	  };
	  commander.command('create project_name').description('make a new lambda patern project').action(function (project_name) {
	    var err, gen_path, info;
	    console.log('+++ 1');
	    create(mu_src_path, process.cwd(), project_name, 2000, function (arguments, _$param0) {
	      err = _$param0;
	      if (ERR(err, cb)) {
	        return;
	      }
	      console.log('+++ 2');
	      gen_path = __dirname + '/' + project_name;
	      console.log('+++ 3');
	      get_metadata(gen_path, function (arguments, _$param1, _$param2) {
	        err = _$param1;
	        info = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        console.log('+++ 4');
	        set_up(mu_src_path, gen_path, info, function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          console.log('+++ 5');
	          build_tools(gen_path, function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            console.log('+++ 6');
	            overwrite_tools(gen_path, function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('+++ 7');
	              cb();
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  });
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	_ = function _(mu_src_path, root_path, project_name, year, cb) {
	  var skel_path, gen_path, err, readme, index, test_file, meta;
	  skel_path = mu_src_path + '/skeleton_data';
	  gen_path = root_path + '/' + project_name;
	  fs.copy(skel_path, gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    fs.readFile(gen_path + '/readme.md', 'utf8', function (arguments, _$param1, _$param2) {
	      err = _$param1;
	      readme = _$param2;
	      if (ERR(err, cb)) {
	        return;
	      }
	      readme = readme.replace(/\[\[project_name\]\]/g, project_name);
	      fs.writeFile(gen_path + '/readme.md', readme, function (arguments, _$param3) {
	        err = _$param3;
	        if (ERR(err, cb)) {
	          return;
	        }
	        fs.readFile(gen_path + '/_.es6', 'utf8', function (arguments, _$param4, _$param5) {
	          err = _$param4;
	          index = _$param5;
	          if (ERR(err, cb)) {
	            return;
	          }
	          index = index.replace(/\[\[project_name\]\]/g, project_name);
	          fs.writeFile(gen_path + '/_.es6', index, function (arguments, _$param6) {
	            err = _$param6;
	            if (ERR(err, cb)) {
	              return;
	            }
	            fs.readFile(gen_path + '/__test.es6', 'utf8', function (arguments, _$param7, _$param8) {
	              err = _$param7;
	              test_file = _$param8;
	              if (ERR(err, cb)) {
	                return;
	              }
	              test_file = test_file.replace(/\[\[project_name\]\]/g, project_name);
	              fs.writeFile(gen_path + '/__test.es6', test_file, function (arguments, _$param9) {
	                err = _$param9;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                fs.readFile(gen_path + '/meta/data.yaml', 'utf8', function (arguments, _$param10, _$param11) {
	                  err = _$param10;
	                  meta = _$param11;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  meta = meta.replace(/\[\[project_name\]\]/g, project_name);
	                  fs.writeFile(gen_path + '/meta/data.yaml', meta, function (arguments, _$param12) {
	                    err = _$param12;
	                    if (ERR(err, cb)) {
	                      return;
	                    }
	                    cb(null);
	                  }.bind(this, arguments));
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = fs-extra;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, mkdir, set_updatables_version, make_project, make_tools, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	mkdir = __webpack_require__(6).mkdirp;
	set_updatables_version = __webpack_require__(8);
	make_project = __webpack_require__(12);
	make_tools = __webpack_require__(19);
	_ = function _(mu_src_path, root_path, metadata, cb) {
	  var err;
	  mkdir(root_path + '/generated_local', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    set_updatables_version(mu_src_path, root_path, 'HEAD', function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      make_project(mu_src_path, root_path, metadata, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        make_tools(mu_src_path, root_path, metadata, cb);
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, tar, archive, fs, mkdirp, create_read_stream, remove, move, find_project_root, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	tar = __webpack_require__(9);
	archive = __webpack_require__(10);
	fs = __webpack_require__(6);
	mkdirp = fs.mkdirp;
	create_read_stream = fs.createReadStream;
	remove = fs.remove;
	move = fs.move;
	find_project_root = __webpack_require__(11);
	_ = function _(mu_src_path, root_path, version, cb) {
	  var move_updatables, cleanup;
	  (function () {
	    var err, tool_root;
	    mkdirp(root_path + '/generated_local', function (arguments, _$param0) {
	      err = _$param0;
	      if (ERR(err, cb)) {
	        return;
	      }
	      find_project_root(mu_src_path + '/mu_sub_repo', function (arguments, _$param1, _$param2) {
	        err = _$param1;
	        tool_root = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        archive({
	          repoPath: tool_root + '/.git',
	          commit: version,
	          outputPath: root_path + '/generated_local/updatables.tar'
	        }, function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          move_updatables();
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }());
	  move_updatables = function move_updatables() {
	    var err;
	    mkdirp(root_path + '/generated_local/updatables', function (arguments, _$param4) {
	      err = _$param4;
	      if (ERR(err, cb)) {
	        return;
	      }
	      create_read_stream(root_path + '/generated_local/updatables.tar').pipe(tar.extract(root_path + '/generated_local/updatables')).on('finish', cleanup).on('error', function (er) {
	        return ERR(er, cb);
	      });
	    }.bind(this, arguments));
	  };
	  cleanup = function cleanup() {
	    var err;
	    remove(root_path + '/generated_local/lambda_updatables', function (arguments, _$param5) {
	      err = _$param5;
	      if (ERR(err, cb)) {
	        return;
	      }
	      move(root_path + '/generated_local/updatables/gen/release/updatables', root_path + '/generated_local/lambda_updatables', function (arguments, _$param6) {
	        err = _$param6;
	        if (ERR(err, cb)) {
	          return;
	        }
	        remove(root_path + '/generated_local/updatables.tar', function (arguments, _$param7) {
	          err = _$param7;
	          if (ERR(err, cb)) {
	            return;
	          }
	          remove(root_path + '/generated_local/updatables', function (arguments, _$param8) {
	            err = _$param8;
	            if (ERR(err, cb)) {
	              return;
	            }
	            cb();
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  };
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = tar-fs;

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = git-archive;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	_ = function _(curr_path, cb) {
	  var err, exists;
	  fs.stat(curr_path + '/.git', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    exists = _$param1;
	    if (exists) {
	      return cb(null, curr_path);
	    }
	    _(curr_path + '/..', cb);
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, read_file, remove, mkdir, copy, yaml, download_updatables, copy_if_exists, make_package_json, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	read_file = fs.readFile;
	remove = fs.remove;
	mkdir = fs.mkdirp;
	copy = fs.copy;
	yaml = __webpack_require__(13);
	download_updatables = __webpack_require__(8);
	copy_if_exists = __webpack_require__(14);
	make_package_json = __webpack_require__(15);
	_ = function _(mu_src_path, root_path, metadata, cb) {
	  var gen_path, err, deps, dev_deps;
	  gen_path = root_path + '/generated_local/project';
	  remove(gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    mkdir(gen_path, function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root_path + '/submodules', gen_path, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        copy(root_path + '/_.es6', gen_path + '/_.es6', function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          copy(root_path + '/__test.es6', gen_path + '/__test.es6', function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            download_updatables(mu_src_path, root_path, 'HEAD', function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              read_file(root_path + '/meta/npm_dependencies.yaml', function (arguments, _$param6, _$param7) {
	                err = _$param6;
	                deps = _$param7;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                read_file(root_path + '/meta/npm_dev_dependencies.yaml', function (arguments, _$param8, _$param9) {
	                  err = _$param8;
	                  dev_deps = _$param9;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  cb();
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = js-yaml;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var fs = __webpack_require__(6);

	var _ = function _(from, to, cb) {
	    var handle_response = function handle_response() {
	        cb();
	    };

	    fs.copy(from, to, handle_response);
	};

	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, r, merge, fs, apply_template, yaml, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	r = __webpack_require__(16);
	merge = __webpack_require__(17);
	fs = __webpack_require__(6);
	apply_template = __webpack_require__(18);
	yaml = __webpack_require__(13);
	_ = function _(mu_src_path, metadata, gen_path, deps, dev_deps, cb) {
	  var map_to_str, err, def_vals_yaml, def_vals, template, replace, s;
	  map_to_str = function map_to_str(i) {
	    var ret;
	    ret = r.map(function (pair) {
	      return '"' + pair[0] + '": "' + pair[1] + '"';
	    }, r.toPairs(i));
	    return ret.join(',\n    ');
	  };
	  fs.readFile(mu_src_path + '/lambda_pattern/shared/default_package_values.yaml', 'utf8', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    def_vals_yaml = _$param1;
	    if (ERR(err, cb)) {
	      return;
	    }
	    def_vals = yaml.safeLoad(def_vals_yaml);
	    fs.readFile(mu_src_path + '/lambda_pattern/shared/package_template.json', 'utf8', function (arguments, _$param2, _$param3) {
	      err = _$param2;
	      template = _$param3;
	      if (ERR(err, cb)) {
	        return;
	      }
	      replace = merge([
	        metadata,
	        def_vals
	      ]);
	      replace.dependencies = map_to_str(deps);
	      replace.dev_dependencies = map_to_str(dev_deps);
	      s = apply_template(template, replace);
	      fs.writeFile(gen_path + '/package.json', s, cb);
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = ramda;

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = object-merge-override;

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = string-template;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, read_file, remove, mkdir, copy, exec, install_packages, install, link_from_global, yaml, copy_if_exists, make_package_json, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	read_file = fs.readFile;
	remove = fs.remove;
	mkdir = fs.mkdirp;
	copy = fs.copy;
	exec = __webpack_require__(20).exec;
	install_packages = __webpack_require__(21).installPkgs;
	install = __webpack_require__(21).install;
	link_from_global = __webpack_require__(21).linkFromGlobal;
	yaml = __webpack_require__(13);
	copy_if_exists = __webpack_require__(14);
	make_package_json = __webpack_require__(15);
	_ = function _(mu_src_path, root, metadata, cb) {
	  var gen_path, err, dev_deps, deps, packages;
	  gen_path = root + '/generated_local/tools';
	  remove(gen_path, function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    mkdir(gen_path, function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root + '/tools', gen_path, function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        read_file(root + '/tools/npm_dev_dependencies.yaml', 'utf8', function (arguments, _$param3, _$param4) {
	          err = _$param3;
	          dev_deps = _$param4;
	          if (ERR(err, cb)) {
	            return;
	          }
	          mkdir(root + '/generated/tools', function (arguments, _$param5) {
	            err = _$param5;
	            if (ERR(err, cb)) {
	              return;
	            }
	            make_package_json(mu_src_path, metadata, root + '/generated/tools', [], yaml.safeLoad(dev_deps), function (arguments, _$param6) {
	              err = _$param6;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('dev deps');
	              console.log(dev_deps);
	              deps = yaml.safeLoad(dev_deps);
	              packages = Object.keys(deps).join(' ');
	              console.log(packages);
	              console.log('====== install 2 started');
	              exec('pnpm i ' + packages, { cwd: root + '/generated/tools' }, function (arguments, _$param7) {
	                err = _$param7;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                console.log('====== install 2 finished');
	                console.log('====== install 3 started');
	                copy(root + '/generated/tools/node_modules', gen_path + '/node_modules', function (arguments, _$param8) {
	                  err = _$param8;
	                  if (ERR(err, cb)) {
	                    return;
	                  }
	                  console.log('====== install 3 finished');
	                  cb();
	                }.bind(this, arguments));
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 20 */
/***/ function(module, exports) {

	module.exports = require("child_process");

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = pnpm;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, yaml, find_project_root, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	yaml = __webpack_require__(13);
	find_project_root = __webpack_require__(11);
	_ = function _(root_path, cb) {
	  var err, metadata;
	  fs.readFile(root_path + '/meta/data.yaml', 'utf8', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    metadata = _$param1;
	    if (ERR(err, cb)) {
	      return;
	    }
	    cb(null, yaml.safeLoad(metadata), root_path);
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, move_if_exists, copy_if_exists, modify_es6, convert_es6, webpack, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	move_if_exists = __webpack_require__(24);
	copy_if_exists = __webpack_require__(14);
	modify_es6 = __webpack_require__(25);
	convert_es6 = __webpack_require__(32);
	webpack = __webpack_require__(33);
	_ = function _(root, cb) {
	  var err;
	  move_if_exists(root + '/generated_local/tools/node_modules', root + '/generated_local/tools_node_modules', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    fs.remove(root + '/generated_local/tools', function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      copy_if_exists(root + '/tools', root + '/generated_local/tools', function (arguments, _$param2) {
	        err = _$param2;
	        if (ERR(err, cb)) {
	          return;
	        }
	        move_if_exists(root + '/generated_local/tools_node_modules', root + '/generated_local/tools/node_modules', function (arguments, _$param3) {
	          err = _$param3;
	          if (ERR(err, cb)) {
	            return;
	          }
	          modify_es6(root + '/generated_local/tools', function (arguments, _$param4) {
	            err = _$param4;
	            if (ERR(err, cb)) {
	              return;
	            }
	            convert_es6(root + '/generated_local/tools', function (arguments, _$param5) {
	              err = _$param5;
	              if (ERR(err, cb)) {
	                return;
	              }
	              console.log('++++ webpack for tools start');
	              webpack(root + '/generated_local/tools', function (arguments, _$param6) {
	                err = _$param6;
	                if (ERR(err, cb)) {
	                  return;
	                }
	                console.log('++++ webpack for tools finished');
	                cb(null);
	              }.bind(this, arguments));
	            }.bind(this, arguments));
	          }.bind(this, arguments));
	        }.bind(this, arguments));
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var fs = __webpack_require__(6);

	var _ = function _(from, to, cb) {
	    var handle_response = function handle_response() {
	        cb();
	    };

	    fs.move(from, to, handle_response);
	};

	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var gulp = __webpack_require__(26);
	var debug = __webpack_require__(27);
	var insert = __webpack_require__(28);
	var replace = __webpack_require__(29);
	var babel = __webpack_require__(30);
	var continuation = __webpack_require__(31);

	var _ = function _(root_path, cb) {
	    gulp.task('a', function () {
	        return gulp.src([root_path + '/**' + '/*.es6', '!*' + '*/expected/**', '!**' + '/node_modules/**', '!**' + '/*_data/**' + '/*']).pipe(insert.prepend('const word_wrap = require(\'word-wrap\');\n')).pipe(insert.prepend('const ERR = require(\'async-stacktrace\');\n')).pipe(replace(/\[project\_name\]/g, 'lambda_pattern')).pipe(replace(/cont\(.*err.*\).*;/g, '$&\n                if (ERR(err, cb)) {\n                    return;}\n                    ')).pipe(replace(/const cb = \(err.*\) \=> \{/g, '$&\n            if (err) {\n                console.log(word_wrap(err.stack.replace(/\\\\/g, \'\\\\ \'), {\n                    trim: true,\n                    width: 80})\n                .split(\'\\n\').forEach((stack_line) => {\n                    console.log(stack_line\n                        .replace(/\\\\ /g, \'\\\\\')\n                        .replace(/ at/g, \'\\nat\')\n                        .replace(/Error:/g, \'\\nError:\'));}));\n                t.fail();\n                return t.end();}\n            ')).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('a');
	};

	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = gulp;

/***/ },
/* 27 */
/***/ function(module, exports) {

	module.exports = gulp-debug;

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = gulp-insert;

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = gulp-replace;

/***/ },
/* 30 */
/***/ function(module, exports) {

	module.exports = gulp-babel;

/***/ },
/* 31 */
/***/ function(module, exports) {

	module.exports = gulp-continuation;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var gulp = __webpack_require__(26);
	var debug = __webpack_require__(27);
	var insert = __webpack_require__(28);
	var replace = __webpack_require__(29);
	var babel = __webpack_require__(30);
	var continuation = __webpack_require__(31);

	var _ = function _(root_path, cb) {
	    gulp.task('_', function () {
	        return gulp.src([root_path + '/**/*.es6', '!**/expected/**', '!**/node_modules/**', '!**/*_data/**/*']).pipe(babel({ presets: ['es2015'] })).pipe(continuation()).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('_');
	};

	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var gulp = __webpack_require__(26);
	var node_externals = __webpack_require__(34);
	var debug = __webpack_require__(27);
	var insert = __webpack_require__(28);
	var replace = __webpack_require__(29);
	var babel = __webpack_require__(30);
	var continuation = __webpack_require__(31);
	var webpack = __webpack_require__(35);

	var _ = function _(root_path, cb) {
	    gulp.task('_', function () {
	        process.chdir(root_path);
	        return gulp.src(root_path + '/_.js').pipe(webpack({
	            context: root_path,
	            externals: [node_externals()],
	            module: {
	                loaders: [{
	                    test: /\.jsx?$/,
	                    exclude: /node_modules/,
	                    loader: 'shebang' }] },
	            node: {
	                __filename: false,
	                __dirname: false },
	            output: { filename: '__built.js' },
	            target: 'node' })).pipe(insert.prepend('#!/usr/bin/env node\n\n')).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
	    });

	    gulp.start('_');
	};

	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = webpack-node-externals;

/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = webpack-stream;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, lambda_state_history, yaml, get_info, update_history, move_tools_scripts, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	lambda_state_history = __webpack_require__(37);
	yaml = __webpack_require__(13);
	get_info = __webpack_require__(38);
	update_history = __webpack_require__(39);
	move_tools_scripts = __webpack_require__(40);
	_ = function _(root_path, cb) {
	  var err, updatables_version, history;
	  get_info(root_path, function (arguments, _$param0, _$param1, _$param2) {
	    err = _$param0;
	    updatables_version = _$param1;
	    history = _$param2;
	    if (ERR(err, cb)) {
	      return;
	    }
	    move_tools_scripts(root_path, history['current_state_version'], function (arguments, _$param3) {
	      err = _$param3;
	      if (ERR(err, cb)) {
	        return;
	      }
	      update_history(root_path, history, updatables_version, function (arguments, _$param4, _$param5) {
	        err = _$param4;
	        history = _$param5;
	        if (ERR(err, cb)) {
	          return;
	        }
	        cb();
	      }.bind(this, arguments));
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ERR = __webpack_require__(1);
	var word_wrap = __webpack_require__(2);
	var fs = __webpack_require__(6);
	var yaml = __webpack_require__(13);

	var add_new = function add_new(project_path, cb) {
	    cb();
	};

	module.exports = { add_new: add_new };
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, yaml, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	yaml = __webpack_require__(13);
	_ = function _(root_path, cb) {
	  var err, updatables_version, history;
	  fs.readFile(root_path + '/generated_local/lambda_updatables/version', 'utf8', function (arguments, _$param0, _$param1) {
	    err = _$param0;
	    updatables_version = _$param1;
	    if (ERR(err, cb)) {
	      return;
	    }
	    fs.readFile(root_path + '/generated/lambda_state_history.yaml', 'utf8', function (arguments, _$param2, _$param3) {
	      err = _$param2;
	      history = _$param3;
	      if (ERR(err, cb)) {
	        return;
	      }
	      history = yaml.safeLoad(history);
	      cb(null, updatables_version, history);
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, yaml, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	yaml = __webpack_require__(13);
	_ = function _(root_path, history, updatables_version, cb) {
	  var state_version, err;
	  state_version = history['newest_state_version'] + 1;
	  history['current_state_version'] = state_version;
	  history['newest_state_version'] = state_version;
	  history['state_version_order'].push(state_version);
	  history['states'][state_version] = {
	    name: 'state',
	    state_version: updatables_version.replace(/\n/g, ''),
	    dev_built: false,
	    dev_tests_passed: false,
	    release_built: false,
	    release_tests_passed: false
	  };
	  fs.writeFile(root_path + '/generated/lambda_state_history.yaml', yaml.safeDump(history), 'utf8', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    cb(null, history);
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var ERR, word_wrap, fs, move_if_exists, ensure_dir, _;
	'use strict';
	ERR = __webpack_require__(1);
	word_wrap = __webpack_require__(2);
	fs = __webpack_require__(6);
	move_if_exists = __webpack_require__(24);
	ensure_dir = fs.mkdirp;
	_ = function _(root_path, updatables_version, cb) {
	  var err;
	  ensure_dir(root_path + '/generated/tools/stored', function (arguments, _$param0) {
	    err = _$param0;
	    if (ERR(err, cb)) {
	      return;
	    }
	    move_if_exists(root_path + '/generated/tools/_.js', root_path + '/generated/tools/stored/' + updatables_version + '.js', function (arguments, _$param1) {
	      err = _$param1;
	      if (ERR(err, cb)) {
	        return;
	      }
	      fs.move(root_path + '/generated_local/tools/__built.js', root_path + '/generated/tools/_.js', cb);
	    }.bind(this, arguments));
	  }.bind(this, arguments));
	};
	module.exports = _;
	/* Generated by Continuation.js v0.1.7 */

/***/ }
/******/ ]);