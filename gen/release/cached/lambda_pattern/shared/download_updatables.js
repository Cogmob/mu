var ERR, word_wrap, extract, rsv, archive, fs, find_project_root, download_updatables;
'use strict';
ERR = require('async-stacktrace');
word_wrap = require('word-wrap');
extract = require('tarball-extract').extractTarball;
rsv = require('path').resolve;
archive = require('git-download-archive');
fs = require('fs-extra');
find_project_root = require('../shared/find_project_root');
download_updatables = function download_updatables(src_path, root, version, cb) {
  var move_updatables, err, tool_root;
  move_updatables = function move_updatables() {
    var err;
    extract(root + '/generated_local/updatables.tar', root + '/generated_local/updatables', function (arguments, _$param0) {
      err = _$param0;
      if (ERR(err, cb)) {
        return;
      }
      fs.remove(root + '/generated_local/lambda_updatables', function (arguments, _$param1) {
        err = _$param1;
        if (ERR(err, cb)) {
          return;
        }
        fs.move(root + '/generated_local/updatables/repo/gen/release/updatables', root + '/generated_local/lambda_updatables', function (arguments, _$param2) {
          err = _$param2;
          if (ERR(err, cb)) {
            return;
          }
          fs.remove(root + '/generated_local/updatables.tar', function (arguments, _$param3) {
            err = _$param3;
            if (ERR(err, cb)) {
              return;
            }
            fs.remove(root + '/generated_local/updatables', function (arguments, _$param4) {
              err = _$param4;
              if (ERR(err, cb)) {
                return;
              }
              cb();
            }.bind(this, arguments));
          }.bind(this, arguments));
        }.bind(this, arguments));
      }.bind(this, arguments));
    }.bind(this, arguments));
  };
  find_project_root(src_path, function (arguments, _$param5, _$param6) {
    err = _$param5;
    tool_root = _$param6;
    if (ERR(err, cb)) {
      return;
    }
    archive(tool_root + '/.git', {
      rev: version,
      format: 'tar'
    }).on('error', function (err) {
      return cb(err);
    }).on('end', move_updatables).pipe(fs.createWriteStream(root + '/generated_local/updatables.tar'));
  }.bind(this, arguments));
};
module.exports = download_updatables;
/* Generated by Continuation.js v0.1.7 */