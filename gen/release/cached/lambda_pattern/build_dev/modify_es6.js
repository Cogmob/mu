'use strict';

var ERR = require('async-stacktrace');
var word_wrap = require('word-wrap');
var gulp = require('gulp');
var debug = require('gulp-debug');
var insert = require('gulp-insert');
var replace = require('gulp-replace');
var babel = require('gulp-babel');
var continuation = require('gulp-continuation');

var modify_es6 = function modify_es6(root_path, project_name, cb) {
    gulp.task('a', function () {
        return gulp.src([root_path + '/**/*.es6', '!**/expected/**', '!**/node_modules/**', '!**/*_data/**/*']).pipe(insert.prepend('const word_wrap = require(\'word-wrap\');\n')).pipe(insert.prepend('const ERR = require(\'async-stacktrace\');\n')).pipe(replace(/\[project\_name\]/g, 'lambda_pattern')).pipe(replace(/cont\(.*err.*\).*;/g, '$&\n                if (ERR(err, cb)) {\n                    return;}\n                    ')).pipe(replace(/const cb = \(err.*\) \=> \{/g, '$&\n            if (err) {\n                console.log(word_wrap(err.stack.replace(/\\\\/g, \'\\\\ \'), {\n                    trim: true,\n                    width: 80})\n                .split(\'\\n\').forEach((stack_line) => {\n                    console.log(stack_line\n                        .replace(/\\\\ /g, \'\\\\\')\n                        .replace(/ at/g, \'\\nat\')\n                        .replace(/Error:/g, \'\\nError:\'));}));\n                t.fail();\n                return t.end();}\n            ')).pipe(gulp.dest(root_path)).on('end', cb).on('error', cb);
    });

    gulp.start('a');
};

module.exports = modify_es6;
/* Generated by Continuation.js v0.1.7 */