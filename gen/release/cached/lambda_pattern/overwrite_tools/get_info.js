var ERR, word_wrap, fs, path, yaml, get_info;
'use strict';
ERR = require('async-stacktrace');
word_wrap = require('word-wrap');
fs = require('fs-extra');
path = require('path');
yaml = require('js-yaml');
get_info = function get_info(root, cb) {
  var err, updatables_version, history;
  fs.readFile(path.resolve(root, 'gen/dev/lambda_updatables/version'), 'utf8', function (arguments, _$param0, _$param1) {
    err = _$param0;
    updatables_version = _$param1;
    if (ERR(err, cb)) {
      return;
    }
    fs.readFile(path.resolve(root, 'gen/stored/lambda_state_history.yaml'), 'utf8', function (arguments, _$param2, _$param3) {
      err = _$param2;
      history = _$param3;
      if (ERR(err, cb)) {
        return;
      }
      history = yaml.safeLoad(history);
      cb(null, updatables_version, history);
    }.bind(this, arguments));
  }.bind(this, arguments));
};
module.exports = get_info;
/* Generated by Continuation.js v0.1.7 */