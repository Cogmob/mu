'use strict';

var ERR = require('async-stacktrace');
var word_wrap = require('word-wrap');
var rsv = require('path').resolve;
var is_function = require('is-function');
var commander = require('commander');

//const store = require('./store/store');
var create_commander = require('./create/create_commander');
//const build_dev_commander = require('./build_dev/build_dev_commander');
//const continuation = require('continuation');

var cb = function cb(err) {
    if (err) {
        console.log(word_wrap(err.stack.replace(/\\/g, '\\ '), {
            trim: true,
            width: 80 }).split('\n').forEach(function (stack_line) {
            console.log(stack_line.replace(/\\ /g, '\\').replace(/ at/g, '\nat').replace(/Error:/g, '\nError:'));
        }));
        t.fail();
        return t.end();
    }

    if (err) {
        console.log(err);
    }
};

var set_up = function set_up(tool_root) {
    create_commander(commander, tool_root, cb);
    //build_dev_commander(commander, cb);
};

module.exports = {
    commander: commander,
    set_up: set_up,
    run: function run() {
        return commander.parse(process.argv);
    } };

if (!module.parent) {
    set_up(rsv('../..'));
    commander.parse(process.argv);
}
/* Generated by Continuation.js v0.1.7 */