var ERR, word_wrap, fs, yaml, path, update_history;
'use strict';
ERR = require('async-stacktrace');
word_wrap = require('word-wrap');
fs = require('fs-extra');
yaml = require('js-yaml');
path = require('path');
update_history = function update_history(root, history, updatables_version, cb) {
  var state_version, err;
  state_version = history['newest_state_version'] + 1;
  history['current_state_version'] = state_version;
  history['newest_state_version'] = state_version;
  history['state_version_order'].push(state_version);
  history['states'][state_version] = {
    name: 'state',
    state_version: updatables_version.replace(/\n/g, ''),
    dev_built: false,
    dev_tests_passed: false,
    release_built: false,
    release_tests_passed: false
  };
  fs.writeFile(path.resolve(root, 'gen/stored/lambda_state_history.yaml'), yaml.safeDump(history), 'utf8', function (arguments, _$param0) {
    err = _$param0;
    if (ERR(err, cb)) {
      return;
    }
    cb(null, history);
  }.bind(this, arguments));
};
module.exports = update_history;
/* Generated by Continuation.js v0.1.7 */