var ERR, word_wrap, gulp, build_dev;
'use strict';
ERR = require('async-stacktrace');
word_wrap = require('word-wrap');
gulp = require('gulp');
build_dev = function build_dev(path, cb) {
  var project_tools, err;
  project_tools = require(path.resolve(path, '../lambda/tools.es6'));
  project_tools.before_build_release(project_path, cb);
  build_code(project_path, function (arguments, _$param0) {
    err = _$param0;
    if (ERR(err, cb)) {
      return;
    }
    gulp.src('src/npm/gulpfile.js').pipe(gulp.dest('../../src/npm')).on('end', function (arguments, _$param1) {
      err = _$param1;
      if (ERR(err, cb)) {
        return;
      }
      gulp.src('src/npm/gulpfile.js').pipe(gulp.dest('.')).on('end', function (arguments, _$param2) {
        err = _$param2;
        if (ERR(err, cb)) {
          return;
        }
        gulp.src('src/tools/tools.js').pipe(webpack({
          target: 'node',
          output: { filename: 'built_tools.js' }
        })).pipe(gulp.dest('src/tools')).on('end', function (arguments, _$param3) {
          err = _$param3;
          if (ERR(err, cb)) {
            return;
          }
          project_tools.after_after_dev(project_path, cb);
        }.bind(this, arguments));
      }.bind(this, arguments));
    }.bind(this, arguments));
  }.bind(this, arguments));
};
/* Generated by Continuation.js v0.1.7 */